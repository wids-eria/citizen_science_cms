<?php
class GameSaveTest extends DrupalWebTestCase {
  protected $user;
  
  public static function getInfo() {
    return array(
      'name' => 'Game Save Test',
      'description' => 'Ensure that the game_save module functions properly.',
      'group' => 'Game Stats',
    );
  }

  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp(
            'services',
            'services_keyauth',
            'amfphp',
            'game_stats',
            'game_save'
    );
  }
  
  public function testGameSave(){
    global $user;
    $this->assertNoText(t('Start of test'));
    $game_id = 1;
    $version = 'v1';
    $time = time();
    $settings = game_stats_start_game($game_id,$version,$time = NULL, $psid = NULL);
    $psid = $settings['psid'];
    $gsid = _game_stats_get_game_session_by_psid($psid);
    $save_object_1 = new stdClass();
    $save_object_2 = new stdClass();

    //Save 1
    $save_object_1->data = '0101';
    $game_save_1 = $save_object_1;
    $save_time_1 = NULL;
    $save_format_1 = 1;

    //Save 2
    $save_object_2->data = '1010';
    $game_save_2 = $save_object_2;
    $save_time_2 = NULL;
    $save_format_2 = 2;

    //TEST SAVE
    _game_save($gsid, $game_save_1, $save_format_1, $save_time_1);
    _game_save($gsid, $game_save_2, $save_format_2, $save_time_2);

    //TEST SAVE LIST
    $saved_data = _game_save_list($game_id);
    $this->assertEqual(count($saved_data), 1, t('save_list should return 1 arrays at this point'));
    $this->assertEqual($saved_data[0]['format'], 2, t('Second item in the list is correct. Overwrote the first item.'));

    //TEST SAVE LOAD
    $save_loaded_1 = _game_save_resume_game($saved_data[0]['gsid'], $version, $time);
    $this->assertEqual($save_loaded_1['state']['data']->data, '1010', t('The resume data is correct.'));
    $this->assertEqual($save_loaded_1['state']['format'], 2, t('The resume data format is correct.'));

    //TEST COMPLETE GAME DELETE ALL SAVED DATA
    game_stats_complete_game($psid, 200, $stats = FALSE, $time = NULL);
    $saves_left = db_result(db_query('SELECT COUNT(*) FROM {games_saves}'));
    $this->assertFalse($saves_left, t('Game complete deletes all saved game data.'));
  }
}

//-service tests